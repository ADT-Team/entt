<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" title=" " alt="" coords="5,427,112,453"/>
<area shape="rect" id="node2" href="$structentt_1_1is__iterator__type.html" title=" " alt="" coords="169,33,339,74"/>
<area shape="rect" id="node4" href="$structentt_1_1is__meta__pointer__like.html" title=" " alt="" coords="182,109,326,150"/>
<area shape="rect" id="node6" href="$structentt_1_1enum__as__bitmask.html" title="Enable bitmask support for enum classes." alt="" coords="175,174,333,215"/>
<area shape="rect" id="node7" href="$structentt_1_1is__applicable.html" title="Same as std::is_invocable, but with tuples." alt="" coords="170,239,338,281"/>
<area shape="rect" id="node8" href="$structentt_1_1is__applicable__r.html" title="Same as std::is_invocable_r, but with tuples for arguments." alt="" coords="169,305,339,361"/>
<area shape="rect" id="node9" href="$structentt_1_1is__complete.html" title="Provides the member constant value to true if a given type is complete, false otherwise." alt="" coords="189,386,319,427"/>
<area shape="rect" id="node10" href="$structentt_1_1is__equality__comparable.html" title="Provides the member constant value to true if a given type is equality comparable,..." alt="" coords="160,451,348,493"/>
<area shape="rect" id="node11" href="$structentt_1_1is__iterator.html" title="Provides the member constant value to true if a given type is an iterator, false otherwise." alt="" coords="189,517,319,558"/>
<area shape="rect" id="node12" href="$structentt_1_1is__iterator__type.html" title="Provides the member constant value to true if a given type is of the required iterator type,..." alt="" coords="177,582,331,623"/>
<area shape="rect" id="node13" href="$structentt_1_1is__meta__pointer__like.html" title="Provides the member constant value to true if a given type is a pointer&#45;like type from the point of v..." alt="" coords="182,647,326,689"/>
<area shape="rect" id="node14" href="$structentt_1_1is__meta__pointer__like_3_01Type_07_5_08_0fN_0e_4.html" title="Partial specialization used to reject pointers to arrays." alt="" coords="182,713,326,754"/>
<area shape="rect" id="node15" href="$structentt_1_1is__transparent.html" title="Provides the member constant value to true if Type::is_transparent is valid and denotes a type,..." alt="" coords="185,778,323,819"/>
<area shape="rect" id="node3" href="$structentt_1_1is__iterator__type_3_01Type_00_01It_00_01std_1_1enable__if__t_3_9std_1_1is__same__d827a14c04f195b53a7b353d4f3d2a15.html" title="Provides the member constant value to true if a given type is of the required iterator type,..." alt="" coords="396,5,584,91"/>
<area shape="rect" id="node5" href="$structentt_1_1is__meta__pointer__like_3_01const_01Type_01_4.html" title="Partial specialization to ensure that const pointer&#45;like types are also accepted." alt="" coords="418,115,562,157"/>
</map>
